#!/usr/bin/env bash

source bin/.bashrc
[[ $# -ne 0 ]] && label "Usage: $0" ko && exit 1

repo_url="git@github.com:msgphp/msgphp.github.io.git"
rev=$(git rev-parse --abbrev-ref --short --verify HEAD)
[[ ${rev} != master ]] && docs_dir="${docs_dir}-${rev}"

mkdir -p var/build var/docs

label "Compiling"
run docs/.refs/compile
[[ $? -ne 0 ]] && label "Failed" ko && exit 1

label "Building"
bin/sami update --force .sami.dist
bin/mkdocs build --site-dir var/build/docs

pushd var/docs &> /dev/null

label "Synchronizing"
if [[ ! -d .git ]]; then
    echo "Cloning..."
    git clone --quiet ${repo_url} .
    [[ $? -ne 0 ]] && label "Failed" ko && popd &> /dev/null && exit 1
fi
git fetch --tags && \
git pull && \
rm -rf api docs && \
mv ../build/docs docs && \
mv ../build/api api
[[ $? -ne 0 ]] && label "Failed" ko && popd &> /dev/null && exit 1

if [[ $(git status --porcelain) ]]; then
    confirm "Push docs for \"${rev}\"?"
    if [[ $? -eq 1 ]]; then
        git add --all && \
        git commit -m "Update docs for \"${rev}\" to $(git rev-parse --short --verify HEAD)" && \
        git push
        [[ $? -ne 0 ]] && label "Failed" ko && popd &> /dev/null && exit 1
    fi
fi

popd &> /dev/null
