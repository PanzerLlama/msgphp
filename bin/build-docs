#!/usr/bin/env bash

source bin/.bashrc
[[ $# -ne 0 ]] && label "Usage: $0" ko && exit 1

load_env
assert_clean

rev=$(git rev-parse --abbrev-ref --short --verify HEAD)
docs_dir="docs" && [[ ${rev} != master ]] && docs_dir="${docs_dir}-${rev}"

label "Compiling"
run docs/.refs/compile
[[ $? -ne 0 ]] && label "Failed" ko && exit 1

assert_clean

label "Building"
mkdir -p var/build
bin/sami update --force .sami.dist
bin/mkdocs build --site-dir "var/build/${docs_dir}"

label "Synchronizing"
git_sync var/docs "${DOCS_REPO}" && \
rm -rf var/docs/api && mv var/build/api var/docs/api && \
rm -rf "var/docs/${docs_dir}" && mv "var/build/${docs_dir}" "var/docs/${docs_dir}"
[[ $? -ne 0 ]] && label "Failed" ko && exit 1

if [[ $(git -C var/docs status --porcelain) ]]; then
    git -C var/docs add --all && \
    git -C var/docs commit -m "Update docs for \"${rev}\" to $(git rev-parse --short --verify HEAD)" && \
    confirm "Push docs for \"${rev}\"?"
    if [[ $? -eq 1 ]]; then
        git -C var/docs push origin master
        [[ $? -ne 0 ]] && label "Failed" ko && exit 1
    fi
fi
